pipeline {
    agent any

    tools {
        nodejs "Node20"
    }

    stages {
        stage('React build'){
            steps{
                dir('FE'){
                    echo 'React build...'
                    sh 'npm install'
                    sh 'CI=false npm run build'
                }
            }
        }

        stage('Dockerimage build'){
            steps{
                dir('FE'){
                    script {
                        def containerName = 'react'
                        def containerExists = sh(script: "docker ps -a --format '{{.Names}}' | grep ${containerName}", returnStatus: true) == 0

                        if (containerExists) {
                            sh 'docker stop ${containerName}'
                            sh 'docker rm ${containerName}'
                        }

                        sh '''
                        echo 'Dockerimage build...'
                        docker rmi docker-react:0.0.1
                        docker build -t docker-react:0.0.1 .
                        '''
                    }
                }
            }
        }

        stage('Deploy'){
            steps{
                dir('BE'){
                    sh '''
                    echo 'Deploy FE...'
                    docker run -d -p 3000:3000 --name react docker-react:0.0.1
                    '''
                }
            }
        }
    }

    post {
        success {
            script {
                def Author_ID = sh(script: "git show -s --pretty=%an", returnStdout: true).trim()
                def Author_Name = sh(script: "git show -s --pretty=%ae", returnStdout: true).trim()
                mattermostSend (color: 'good',
                message: "Jenkins Success: ${env.JOB_NAME} #${env.BUILD_NUMBER} by ${Author_ID}(${Author_Name})\n(<${env.BUILD_URL}|Details>)"
                )
            }
        }
        failure {
            script {
                def Author_ID = sh(script: "git show -s --pretty=%an", returnStdout: true).trim()
                def Author_Name = sh(script: "git show -s --pretty=%ae", returnStdout: true).trim()
                mattermostSend (color: 'danger',
                message: "Jenkins Fail: ${env.JOB_NAME} #${env.BUILD_NUMBER} by ${Author_ID}(${Author_Name})\n(<${env.BUILD_URL}|Details>)"
                )
            }
        }
    }
}